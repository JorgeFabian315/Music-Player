// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Music_Player.Models;

#nullable disable

namespace Music_Player.Migrations
{
    [DbContext(typeof(MusicPlayerContext))]
    [Migration("20230531031459_Megusta")]
    partial class Megusta
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseCollation("utf8mb4_0900_ai_ci")
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.HasCharSet(modelBuilder, "utf8mb4");

            modelBuilder.Entity("Music_Player.Models.Artista", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<int?>("TotalCanciones")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("'0'");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.ToTable("artista", (string)null);
                });

            modelBuilder.Entity("Music_Player.Models.BitacoraUsuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("CorreoElectronico")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<DateTime?>("FechaAgregada")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<int>("IdUsuario")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "IdUsuario" }, "fk_Bitacora_Usuario");

                    b.ToTable("bitacora_usuario", (string)null);
                });

            modelBuilder.Entity("Music_Player.Models.Cancion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Duracion")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)");

                    b.Property<DateTime?>("FechaAgregada")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<int>("IdArtista")
                        .HasColumnType("int");

                    b.Property<int>("IdGenero")
                        .HasColumnType("int");

                    b.Property<int>("IdUsuario")
                        .HasColumnType("int");

                    b.Property<ulong>("MeGusta")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit(1)")
                        .HasDefaultValueSql("b'0'");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "IdArtista" }, "fk_Musica_Artista");

                    b.HasIndex(new[] { "IdGenero" }, "fk_Musica_Genero");

                    b.HasIndex(new[] { "IdUsuario" }, "fk_Musica_Usuario");

                    b.ToTable("cancion", (string)null);
                });

            modelBuilder.Entity("Music_Player.Models.Genero", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<int?>("TotalCanciones")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("'0'");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.ToTable("genero", (string)null);
                });

            modelBuilder.Entity("Music_Player.Models.Rol", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<int>("Valor")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.ToTable("rol", (string)null);
                });

            modelBuilder.Entity("Music_Player.Models.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Contraseña")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("CorreoElectronico")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<int>("IdRol")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "CorreoElectronico" }, "CorreoElectronico")
                        .IsUnique();

                    b.HasIndex(new[] { "IdRol" }, "fk_Usuario_Rol");

                    b.ToTable("usuario", (string)null);
                });

            modelBuilder.Entity("Music_Player.Models.BitacoraUsuario", b =>
                {
                    b.HasOne("Music_Player.Models.Usuario", "IdUsuarioNavigation")
                        .WithMany("BitacoraUsuario")
                        .HasForeignKey("IdUsuario")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_Bitacora_Usuario");

                    b.Navigation("IdUsuarioNavigation");
                });

            modelBuilder.Entity("Music_Player.Models.Cancion", b =>
                {
                    b.HasOne("Music_Player.Models.Artista", "IdArtistaNavigation")
                        .WithMany("Cancion")
                        .HasForeignKey("IdArtista")
                        .IsRequired()
                        .HasConstraintName("fk_Musica_Artista");

                    b.HasOne("Music_Player.Models.Genero", "IdGeneroNavigation")
                        .WithMany("Cancion")
                        .HasForeignKey("IdGenero")
                        .IsRequired()
                        .HasConstraintName("fk_Musica_Genero");

                    b.HasOne("Music_Player.Models.Usuario", "IdUsuarioNavigation")
                        .WithMany("Cancion")
                        .HasForeignKey("IdUsuario")
                        .IsRequired()
                        .HasConstraintName("fk_Musica_Usuario");

                    b.Navigation("IdArtistaNavigation");

                    b.Navigation("IdGeneroNavigation");

                    b.Navigation("IdUsuarioNavigation");
                });

            modelBuilder.Entity("Music_Player.Models.Usuario", b =>
                {
                    b.HasOne("Music_Player.Models.Rol", "IdRolNavigation")
                        .WithMany("Usuario")
                        .HasForeignKey("IdRol")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_Usuario_Rol");

                    b.Navigation("IdRolNavigation");
                });

            modelBuilder.Entity("Music_Player.Models.Artista", b =>
                {
                    b.Navigation("Cancion");
                });

            modelBuilder.Entity("Music_Player.Models.Genero", b =>
                {
                    b.Navigation("Cancion");
                });

            modelBuilder.Entity("Music_Player.Models.Rol", b =>
                {
                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("Music_Player.Models.Usuario", b =>
                {
                    b.Navigation("BitacoraUsuario");

                    b.Navigation("Cancion");
                });
#pragma warning restore 612, 618
        }
    }
}
